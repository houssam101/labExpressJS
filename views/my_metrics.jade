extend layout

block content
  div.container
    div.header.clearfix
         nav
                    ul(class='nav nav-pills pull-right')
                        li(role='presentation')
                            a(href='/')
                                i(class="fa fa-home")
                                span  Index
                        if locals.connected == true
                            li(role='presentation',class="active")
                                a(href='/my-metrics')
                                    i(class="fa fa-table")
                                    span  My metrics
                            li(role='presentation')
                                a(href='/logout')
                                    i(class="fa fa-sign-out")
                                    span  Logout [ #{locals.user} ]

    div.jumbotron



        h1
            i(class="fa fa-pie-chart")
            span  My metrics

        div#graph.aGraph
        div#display-metrics
        div#metrics
        div#content
        p
            button(id="get-metrics",class="btn btn-primary")
                i(class="fa fa-refresh")
                span  Display/Refresh metrics


        hr

        h1
            i(class="fa fa-plus")
            span  Insert metrics
        p You can insert metrics using this form.
        form(name="login", action="/my-metrics", method="post")
            div.row
                div.col-sm-6
                    div#datepicker
                    input(type="hidden", name="date", id="date", class="form-control", required="true")

                div.col-sm-6
                    div.form-group
                      label(for="value") Value
                      input(type="number", name="value", id="value", class="form-control",required="true")
                    div.form-group
                      button(type="submit", class="btn btn-success") Insert this metric



    script
      :coffee-script
        $('#get-metrics').click (e) ->
          e.preventDefault()

          $.getJSON '/metrics.json', (metrics) ->
            $('#content').empty()
            $('#graph').empty()
            c = "<table class='table table-striped table-condensed table-hover'><tr><th>Date (timestamp format)</th><th>Value</th></tr>"
            values = []
            timestamps = []
            for metric in metrics
              c+="<tr><td>#{metric.date}</td><td>#{metric.value}</td></tr>"
              values.push parseInt("#{metric.value}")
              timestamps.push parseInt("#{metric.date}")
            c+="</table>"
            showGraph values, timestamps
            $('#metrics').html c
        $('#datepicker').datepicker
          maxViewMode: 1
          todayHighlight: true
          format: 'dd/mm/yyyy'

        $('#datepicker').on 'changeDate', ->
          $('#date').val $('#datepicker').datepicker('getFormattedDate')
          return

        showGraph = (values, timestamps) ->
          margins = [80, 80, 80, 80]
          width = 650 - (margins[1]) - (margins[3])
          height = 400 - (margins[0]) - (margins[2])

          # Define x and y axis
          x = d3.scale.linear().domain([0, values.length]).range([0, width])
          y = d3.scale.linear().domain([0, d3.max(values)]).range([height, 0])

          # create a line function that can convert values[] into x and y points
          line = d3.svg.line().x((d, i) ->
            x i
          ).y((d) ->
            y d
          )


          graph = d3.select('#graph').append('svg').attr('width', width + margins[1] + margins[3]).attr('height', height + margins[0] + margins[2]).append('svg:g').attr('transform', 'translate(' + margins[3] + ',' + margins[0] + ')')

          # Display time in french format 20/12/2015
          formatTimestamp = (d) ->
            if timestamps[d]?
              date = new Date(timestamps[d])
              year = date.getFullYear()
              month = date.getMonth()+1
              day = date.getDate()
              hours = date.getHours()
              minutes = '0' + date.getMinutes()
              return formattedTime = day + '/' + month + '/' + year
            else
              return ''


          xAxis = d3.svg.axis().scale(x).ticks(timestamps.length).outerTickSize(0).tickFormat(formatTimestamp).tickSize(-height).tickSubdivide(true)
          graph.append('svg:g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call xAxis

          yAxisLeft = d3.svg.axis().scale(y).ticks(6).orient('left')
          graph.append('svg:g').attr('class', 'y axis').attr('transform', 'translate(-25,-5)').call yAxisLeft

          graph.append('svg:path').attr 'd', line(values)