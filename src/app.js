// Generated by CoffeeScript 1.10.0
(function() {
  var app, express, levelup, metrics;

  express = require('express');

  app = express();

  levelup = require('levelup');

  metrics = require('./metrics');

  app.set('port', 1889);

  app.set('views', __dirname + "/../views");

  app.set('view engine', 'jade');

  app.use('/', express["static"](__dirname + "/../public"));

  app.use(require('body-parser')());

  app.get('/login', function(req, res) {
    return res.render('login');
  });

  app.get('/display-metrics', function(req, res) {
    return res.render('display_metrics');
  });

  app.get('/insert-metrics', function(req, res) {
    return res.render('insert_metrics');
  });

  app.get('/', function(req, res) {
    return res.render('login');
  });

  app.get('/metrics.json', function(req, res) {
    return res.status(200).json(metrics.get());
  });

  app.get('/hello/:name', function(req, res) {
    return res.status(200).send(req.params.name);
  });

  app.post('/insert-metric', function(req, res) {
    var timestamp, username;
    username = 'admin';
    timestamp = (new Date).getTime().toString();
    metrics.put_metrics(timestamp, req.body.value);
    return metrics.put_association(username, timestamp);
  });

  app.post('/metric/:id.json', function(req, res) {
    return metrics.save(req.params.id, req.body, function(err) {
      if (err) {
        return res.status(500).json(err);
      } else {
        return res.status(200).send("Metrics saved");
      }
    });
  });

  app.post('/login', function(req, res) {
    console.log("Login method called");
    console.log("- user : " + req.body.user);
    console.log("- pass : " + req.body.pass);
    if (req.body.user === "admin" && req.body.pass === "password") {
      res.locals.connected = "test";
      return res.render('insert_metrics');
    } else {
      return res.render('login');
    }
  });

  app.listen(app.get('port'), function() {
    return console.log("listening on " + (app.get('port')));
  });

}).call(this);

//# sourceMappingURL=app.js.map
